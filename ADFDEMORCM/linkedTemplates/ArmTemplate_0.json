{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFDEMORCM"
		},
		"SqlServerlinkedservice_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerlinkedservice'"
		},
		"linkedserivce_storagedemochand_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedserivce_storagedemochand'"
		},
		"linkedservice_Sql_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkedservice_Sql'"
		},
		"SqlServer1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "@{linkedService().serverName}"
		},
		"SqlServer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().dbName}"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().userName}"
		},
		"SqlServerlinkedservice_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "adcdcompany.database.windows.net"
		},
		"SqlServerlinkedservice_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "abcddevdb"
		},
		"SqlServerlinkedservice_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "chandramohan"
		},
		"linkedservice_Sql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "mydbserver.windows.db.net"
		},
		"linkedservice_Sql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().DBname}"
		},
		"linkedservice_Sql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "chandra"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadHourlyAndDailyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set value for filetype",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileType",
							"value": {
								"value": "@replace(pipeline().parameters.FileName,'Sales','')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set value for filetype",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('FileType')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "DailySales"
					}
				},
				"variables": {
					"FileType": {
						"type": "String"
					},
					"ListOfFiles": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-17T00:17:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://dummy.restapiexample.com/api/v1/employees"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-17T03:55:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.list",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(),3)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"list": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6,
							7
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-20T23:46:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer1_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": "@{linkedService().password}"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerlinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServerlinkedservice_properties_typeProperties_server')]",
					"database": "[parameters('SqlServerlinkedservice_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServerlinkedservice_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerlinkedservice_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedserivce_storagedemochand')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedserivce_storagedemochand_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_Sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('linkedservice_Sql_properties_typeProperties_server')]",
					"database": "[parameters('linkedservice_Sql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('linkedservice_Sql_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_Sql_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-SelfHosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Departmentdatadataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "department.csv",
						"folderPath": "input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "depid",
						"type": "String"
					},
					{
						"name": "depname",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_sqltable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_Sql",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBname": {
							"value": "@dataset().dbNameFromDataSet",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"dbNameFromDataSet": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedservice_Sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demochandraOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string",
						"defaultValue": "[[output1,output2,output3]"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "circuitId",
						"type": "String"
					},
					{
						"name": "circuitRef",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "alt",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeedatadataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employees.csv",
						"folderPath": "input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "depid",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputdataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "circuits.csv",
						"folderPath": "input",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "circuitId",
						"type": "String"
					},
					{
						"name": "circuitRef",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "alt",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "circuits01.csv",
						"folderPath": "output",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputdatasetfinal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "circuitId",
						"type": "String"
					},
					{
						"name": "circuitRef",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "alt",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputfolderdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "adfdemo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputlocationdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserivce_storagedemochand",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"outputfolder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().outputfolder",
							"type": "Expression"
						},
						"container": "adfdemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "circuitId",
						"type": "String"
					},
					{
						"name": "circuitRef",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "alt",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserivce_storagedemochand')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfdemo/input/circuits.csv"
							},
							{
								"name": "Destination",
								"value": "adfdemo/output/circuits01.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "inputdataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "outputDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourcePath": {
						"type": "string"
					},
					"SourceFile": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-16T21:54:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inputdataSet')]",
				"[concat(variables('factoryId'), '/datasets/outputDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dataset_sqltable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "Table1",
									"dbNameFromDataSet": "TestDB"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sqltable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "Table2",
									"dbNameFromDataSet": "TestDB"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-16T17:23:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataset_sqltable')]"
			]
		}
	]
}